{"version":3,"sources":["components/Show.js","components/Episodes.js","components/Spinner.js","App.js","constants.js","index.js"],"names":["show","episodes","className","name","src","image","medium","alt","dangerouslySetInnerHTML","__html","summary","map","ep","key","id","to","type","season","number","useParams","episode","find","Number","original","App","useState","setShow","setEpisodes","useEffect","axios","get","then","data","exact","path","children","Show","Episodes","Spinner","ReactDOM","render","document","getElementById"],"mappings":"6QAOe,cAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAStB,OACE,6BACE,wBAAIC,UAAU,SAASF,EAAKG,MAC5B,yBAAKD,UAAU,WACb,yBAAKE,IAAKJ,EAAKK,MAAMC,OAAQC,IAAKP,EAAKG,OAEvC,yBAAKD,UAAU,QACb,uCACA,yBAAKA,UAAU,UAAUM,wBAAyB,CAAEC,OAAQT,EAAKU,WACjE,yBAAKR,UAAU,eACb,wCACCD,EAASU,KAnBG,SAACC,GAAD,OACrB,yBAAKC,IAAKD,EAAGE,IACX,kBAAC,IAAD,CAAMZ,UAAU,OAAOa,GAAE,oBAAeH,EAAGE,KACzC,4BAAQE,KAAK,UAAb,KAAyBJ,EAAGK,OAA5B,KAAsCL,EAAGM,OAAzC,MAAoDN,EAAGT,gBCNhD,cAAyB,IAAtBH,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACda,EAAOK,cAAPL,GACFM,EAAUnB,EAASoB,MAAK,SAACT,GAAD,OAAQA,EAAGE,KAAOQ,OAAOR,MAEvD,OACE,yBAAKZ,UAAU,WACb,wBAAIA,UAAU,SAASF,EAAKG,MACV,MAAjBiB,EAAQf,OACJ,yBAAKD,IAAKgB,EAAQf,MAAMkB,SAAUhB,IAAKa,EAAQjB,OACpD,yBAAKD,UAAU,QACb,4BAAKkB,EAAQjB,MAEb,0BAAMK,wBAAyB,CAAEC,OAAQW,EAAQV,cCd1C,oBACb,yBAAKR,UAAU,WACb,0BAAMA,UAAU,oBAChB,0BAAMA,UAAU,oBAChB,0BAAMA,UAAU,sB,MC2BLsB,MAxBf,WAAgB,IAAD,EACWC,qBADX,mBACNzB,EADM,KACA0B,EADA,OAEmBD,qBAFnB,mBAENxB,EAFM,KAEI0B,EAFJ,KAYb,OARAC,qBAAU,WACRC,IAAMC,ICfa,oCDeAC,MAAK,SAACC,GACvBN,EAAQM,EAAKA,SAEfH,IAAMC,ICjBgB,6CDiBAC,MAAK,SAACC,GAC1BL,EAAYK,EAAKA,WAElB,IACIhC,GAAQC,EACb,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAIC,SAAU,kBAACC,EAAD,CAAMpC,KAAMA,EAAMC,SAAUA,MAC5D,kBAAC,IAAD,CAAOiC,KAAK,gBAAgBC,SAAU,kBAACE,EAAD,CAAUrC,KAAMA,EAAMC,SAAUA,SAIzE,kBAACqC,EAAD,OE3BPC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.da0905a3.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/no-danger */\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// eslint-disable-next-line react/prop-types\nexport default ({ show, episodes }) => {\n  const renderEpisodes = (ep) => (\n    <div key={ep.id}>\n      <Link className=\"link\" to={`/episodes/${ep.id}`}>\n        <button type=\"button\">s:{ep.season}e:{ep.number} - {ep.name}</button>\n      </Link>\n    </div>\n  );\n\n  return (\n    <div>\n      <h1 className=\"title\">{show.name}</h1>\n      <div className=\"content\">\n        <img src={show.image.medium} alt={show.name} />\n        {/* dangerouslySetInnerHTML is React’s replacement for using innerHTML... */}\n        <div className=\"info\">\n          <h3>Summary</h3>\n          <div className=\"summary\" dangerouslySetInnerHTML={{ __html: show.summary }} />\n          <div className=\"episodeList\">\n            <h3>Episodes</h3>\n            {episodes.map(renderEpisodes)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default ({ show, episodes }) => {\n  const { id } = useParams();\n  const episode = episodes.find((ep) => ep.id === Number(id));\n\n  return (\n    <div className=\"content\">\n      <h1 className=\"title\">{show.name}</h1>\n      {episode.image != null\n        && <img src={episode.image.original} alt={episode.name} />}\n      <div className=\"info\">\n        <h2>{episode.name}</h2>\n        {/* dangerouslySetInnerHTML is React’s replacement for using innerHTML the browser DOM */}\n        <span dangerouslySetInnerHTML={{ __html: episode.summary }} />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/display-name */\nimport React from 'react';\n\nexport default () => (\n  <div className=\"spinner\">\n    <span className=\"spinner-inner-1\" />\n    <span className=\"spinner-inner-2\" />\n    <span className=\"spinner-inner-3\" />\n  </div>\n);\n","/* eslint-disable react/no-children-prop */\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Show from './components/Show';\nimport Episodes from './components/Episodes';\nimport { showUrl, episodeUrl } from './constants';\nimport Spinner from './components/Spinner';\nimport './styles/styles.scss';\n\nfunction App() {\n  const [show, setShow] = useState();\n  const [episodes, setEpisodes] = useState();\n\n  useEffect(() => {\n    axios.get(showUrl).then((data) => {\n      setShow(data.data);\n    });\n    axios.get(episodeUrl).then((data) => {\n      setEpisodes(data.data);\n    });\n  }, []);\n  return show && episodes ? (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" children={<Show show={show} episodes={episodes} />} />\n          <Route path=\"/episodes/:id\" children={<Episodes show={show} episodes={episodes} />} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  ) : (<Spinner />);\n}\n\nexport default App;\n","export const showUrl = 'http://api.tvmaze.com/shows/6771';\nexport const episodeUrl = 'http://api.tvmaze.com/shows/6771/episodes';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}